// Проверяет наличие роли пользователя (текущего или любого указанного)
Функция ЕстьРоль(ИмяРоли, Пользователь = Неопределено) Экспорт

	Если Пользователь = Неопределено Тогда
		Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 
		|ИЗ
		|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК ПрофилиГруппДоступаРоли
		|		ПО ГруппыДоступаПользователи.Ссылка.Профиль = ПрофилиГруппДоступаРоли.Ссылка
		|ГДЕ
		|	ПрофилиГруппДоступаРоли.Роль.Имя = &Роль
		|	И ГруппыДоступаПользователи.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("Роль", ИмяРоли);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;		
	Иначе	
		Возврат Истина;		
	КонецЕсли;
	
КонецФункции



//Функция возврата данных из базы по зданию 
// для бизнес процесса ЗагрузкаТранспортногоФайла 
Функция ЗаполнитьРеквизитыПоЗданиюНаСервере(ТекЗдание) Экспорт
	
	 // Уточ
	 
	СтруктураРезультат = Новый Структура; 
	
	Для каждого РеквизитТЧ из Метаданные.БизнесПроцессы.ЕРЦ_ОбработкаТранспортногоФайла.ТабличныеЧасти.ТЧЗдания.Реквизиты Цикл  
      СтруктураРезультат.Вставить(РеквизитТЧ.Имя); 
		
	КонецЦикла; 
	 // Реквизиты КодУК , НаименованиеУК , РегистрацииВРоссереестре в базе не найдены 
	 
     Запрос = Новый запрос; 
	 
	 Запрос.Текст  = "ВЫБРАТЬ
	                 |	КВП_Здания.Наименование КАК Наименование,
	                 |	КВП_Здания.Код КАК КодЗдания,
	                 |	КВП_Здания.ВидСооружения КАК ВидСооружения,
	                 |	КВП_Здания.ЕРЦ_Город КАК Город,
	                 |	КВП_Здания.ЕРЦ_Индекс КАК Индекс,
	                 |	КВП_Здания.ЕРЦ_УправляющаяКомпания.Код КАК КодУк,
	                 |	КВП_Здания.ЕРЦ_УправляющаяКомпания.Наименование КАК НаименованиеУК,
	                 |	КВП_Здания.Этажей КАК КоличествоЭтажей,
	                 |	КВП_Здания.НомерДома КАК НомерДома,
	                 |	КВП_Здания.ЕРЦ_Строение КАК НомерСтроения,
	                 |	КВП_Здания.ЕРЦ_Регион КАК Регион,
	                 |	КВП_Здания.ЕРЦ_Район КАК Район,
	                 |	КВП_Здания.ЕРЦ_Улица КАК Улица,
	                 |	КВП_Здания.ЕРЦ_ФедеральныйОкруг КАК ФедеральныйОкруг,
	                 |	КВП_Здания.ЕРЦ_НаселенныйПункт КАК НаселенныйПункт,
	                 |	КВП_Здания.ЕРЦ_ТерриториальныйОтдел КАК ТерриториальныйОтдел,
	                 |	""РегистрацияВРоссреесте"" КАК РегистрацияВРоссреестре,
	                 |	КВП_Здания.Ссылка КАК Ссылка,
	                 |	КВП_Здания.КодЗданияКлиента КАК КодЗданияКлиента
	                 |ПОМЕСТИТЬ ВТ_Реквизиты
	                 |ИЗ
	                 |	Справочник.КВП_Здания КАК КВП_Здания
	                 |ГДЕ
	                 |	КВП_Здания.Ссылка = &ТекЗдание
	                 |;
	                 |
	                 |////////////////////////////////////////////////////////////////////////////////
	                 |ВЫБРАТЬ
	                 |	КВП_ЗданияДополнительныеРеквизиты.Ссылка КАК Ссылка,
	                 |	КВП_ЗданияДополнительныеРеквизиты.Значение КАК ПриказОПередаче
	                 |ПОМЕСТИТЬ ВТ_ПриказОПередаче
	                 |ИЗ
	                 |	Справочник.КВП_Здания.ДополнительныеРеквизиты КАК КВП_ЗданияДополнительныеРеквизиты
	                 |ГДЕ
	                 |	КВП_ЗданияДополнительныеРеквизиты.Ссылка = &ТекЗдание
	                 |	И КВП_ЗданияДополнительныеРеквизиты.Свойство.ИдентификаторДляФормул = ""ПриказаОПередачеФГАУ2""
	                 |;
	                 |
	                 |////////////////////////////////////////////////////////////////////////////////
	                 |ВЫБРАТЬ
	                 |	КВП_ЗданияДополнительныеРеквизиты.Ссылка КАК Ссылка,
	                 |	КВП_ЗданияДополнительныеРеквизиты.Значение КАК ДатаПринятияКУправлению
	                 |ПОМЕСТИТЬ ВТ_ДатаПринятияКУправлению
	                 |ИЗ
	                 |	Справочник.КВП_Здания.ДополнительныеРеквизиты КАК КВП_ЗданияДополнительныеРеквизиты
	                 |ГДЕ
	                 |	КВП_ЗданияДополнительныеРеквизиты.Ссылка = &ТекЗдание
	                 |	И КВП_ЗданияДополнительныеРеквизиты.Свойство.ИдентификаторДляФормул = ""ДатаПринятияКУправлению""
	                 |;
	                 |
	                 |////////////////////////////////////////////////////////////////////////////////
	                 |ВЫБРАТЬ
	                 |	КВП_ЗданияДополнительныеРеквизиты.Ссылка КАК Ссылка,
	                 |	КВП_ЗданияДополнительныеРеквизиты.Значение КАК АктПриемаПередачи
	                 |ПОМЕСТИТЬ ВТ_АктПриемаПередачи
	                 |ИЗ
	                 |	Справочник.КВП_Здания.ДополнительныеРеквизиты КАК КВП_ЗданияДополнительныеРеквизиты
	                 |ГДЕ
	                 |	КВП_ЗданияДополнительныеРеквизиты.Ссылка = &ТекЗдание
	                 |	И КВП_ЗданияДополнительныеРеквизиты.Свойство.ИдентификаторДляФормул = ""АктПриемаПерердачиВоФГАУ""
	                 |;
	                 |
	                 |////////////////////////////////////////////////////////////////////////////////
	                 |ВЫБРАТЬ
	                 |	КВП_ЗданияКонтактнаяИнформация.Представление КАК Представление,
	                 |	КВП_ЗданияКонтактнаяИнформация.Ссылка КАК Ссылка
	                 |ПОМЕСТИТЬ ВТ_ПолныйАдрес
	                 |ИЗ
	                 |	Справочник.КВП_Здания.КонтактнаяИнформация КАК КВП_ЗданияКонтактнаяИнформация
	                 |ГДЕ
	                 |	КВП_ЗданияКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.УПЖКХ_ПочтовыйАдресЗдания)
	                 |	И КВП_ЗданияКонтактнаяИнформация.Ссылка = &ТекЗдание
	                 |;
	                 |
	                 |////////////////////////////////////////////////////////////////////////////////
	                 |ВЫБРАТЬ
	                 |	ВТ_Реквизиты.Наименование КАК Наименование,
	                 |	ВТ_Реквизиты.КодЗдания КАК КодЗдания,
	                 |	ВТ_Реквизиты.ВидСооружения КАК ВидСооружения,
	                 |	ВТ_Реквизиты.Город КАК Город,
	                 |	ВТ_Реквизиты.Индекс КАК Индекс,
	                 |	ВТ_Реквизиты.КодУк КАК КодУк,
	                 |	ВТ_Реквизиты.НаименованиеУК КАК НаименованиеУК,
	                 |	ВТ_Реквизиты.КоличествоЭтажей КАК КоличествоЭтажей,
	                 |	ВТ_Реквизиты.НомерДома КАК НомерДома,
	                 |	ВТ_Реквизиты.НомерСтроения КАК НомерСтроения,
	                 |	ВТ_Реквизиты.Регион КАК Регион,
	                 |	ВТ_Реквизиты.Район КАК Район,
	                 |	ВТ_Реквизиты.Улица КАК Улица,
	                 |	ВТ_Реквизиты.ФедеральныйОкруг КАК ФедеральныйОкруг,
	                 |	ВТ_Реквизиты.НаселенныйПункт КАК НаселенныйПункт,
	                 |	ВТ_Реквизиты.Ссылка КАК Ссылка,
	                 |	ВТ_Реквизиты.ТерриториальныйОтдел КАК ТерриториальныйОтдел,
	                 |	ЕСТЬNULL(ВТ_ПолныйАдрес.Представление, """") КАК ПолныйАдрес,
	                 |	ВТ_Реквизиты.РегистрацияВРоссреестре КАК РегистрацияВРоссреестре,
	                 |	ЕСТЬNULL(ВТ_АктПриемаПередачи.АктПриемаПередачи, """") КАК АктПриемаПередачи,
	                 |	ЕСТЬNULL(ВТ_ДатаПринятияКУправлению.ДатаПринятияКУправлению, НЕОПРЕДЕЛЕНО) КАК ДатаПринятияКУправлению,
	                 |	ЕСТЬNULL(ВТ_ПриказОПередаче.ПриказОПередаче, """") КАК ПриказОПередаче,
	                 |	ВТ_Реквизиты.КодЗданияКлиента КАК КодЗданияКлиента
	                 |ИЗ
	                 |	ВТ_Реквизиты КАК ВТ_Реквизиты
	                 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПолныйАдрес КАК ВТ_ПолныйАдрес
	                 |		ПО ВТ_Реквизиты.Ссылка = ВТ_ПолныйАдрес.Ссылка
	                 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриказОПередаче КАК ВТ_ПриказОПередаче
	                 |		ПО ВТ_Реквизиты.Ссылка = ВТ_ПриказОПередаче.Ссылка
	                 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДатаПринятияКУправлению КАК ВТ_ДатаПринятияКУправлению
	                 |		ПО ВТ_Реквизиты.Ссылка = ВТ_ДатаПринятияКУправлению.Ссылка
	                 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АктПриемаПередачи КАК ВТ_АктПриемаПередачи
	                 |		ПО ВТ_Реквизиты.Ссылка = ВТ_АктПриемаПередачи.Ссылка"; 
	 
	 Запрос.УстановитьПараметр("ТекЗдание",ТекЗдание); 

	Выборка = Запрос.Выполнить().Выбрать(); 
	
	Если Выборка.Следующий() Тогда 
     ЗаполнитьЗначенияСвойств(СтруктураРезультат,Выборка);
	 //Фахретдинов 14803
	 СтруктураРезультат.Вставить("КодЗданияКлиента",Выборка.КодЗданияКлиента);
	 //Фахретдинов 14803
	КонецЕсли; 
	
	
	
	 
 Возврат СтруктураРезультат; 

КонецФункции

//Функция возврата данных из базы по помещению  
// для бизнес процесса ЗагрузкаТранспортногоФайла 
Функция ЗаполнитьРеквизитыПоПомещениюНаСервере(ТекЗдание,НомерПомещения,ВидПомещения) Экспорт
	
	
	СтруктураРезультат  = Новый Структура; 
	СтруктураРезультат.Вставить("ВидПомещения"); 
	СтруктураРезультат.Вставить("КоличествоКомнат"); 
	СтруктураРезультат.Вставить("ПлощадьЖилая"); 
	СтруктураРезультат.Вставить("ПлощадьОбщая"); 
	СтруктураРезультат.Вставить("Подъезд");   
	СтруктураРезультат.Вставить("СтатусПомещения"); 
	СтруктураРезультат.Вставить("УИДПомещения"); 
	СтруктураРезультат.Вставить("Этаж"); 
	СтруктураРезультат.Вставить("НомерПомещения");  
	СтруктураРезультат.Вставить("ДатаРегистрацииВРосреестре"); 
	// Статус Помещения переделать на контрагента ФГАУ незаселенный фонд , если то не заселено 
	
	Запрос = Новый Запрос; 
	
	Запрос.УстановитьПараметр("Владелец",ТекЗдание); 
	Запрос.УстановитьПараметр("НомерПомещения",НомерПомещения); 
	Запрос.УстановитьПараметр("ВидПомещения",ВидПомещения);
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата()); 
	Запрос.УстановитьПараметр("КонтрагентПустующийФонд",Справочники.ЕРЦ_ТехническийСправочник.ДоговорНаПустующийФонд.Значение.Владелец); 
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	УПЖКХ_Помещения.ВидПомещения КАК ВидПомещения,
	               |	УПЖКХ_Помещения.Код КАК НомерПомещения,
	               |	УПЖКХ_Помещения.КоличествоКомнат КАК КоличествоКомнат,
	               |	УПЖКХ_Помещения.Ссылка КАК Помещение,
	               |	УПЖКХ_Помещения.Подъезд.Код КАК Подъезд,
	               |	УПЖКХ_Помещения.Этаж КАК Этаж,
	               |	""СтатусПомещенияУТОЧНИТЬ"" КАК СтатусПомещения,
	               |	УПЖКХ_Помещения.ЕРЦ_ДатаРегистрацииВРосреестре КАК ДатаРегистрацииВРосреестре
	               |ПОМЕСТИТЬ ВТ_РеквизитыПомещения
	               |ИЗ
	               |	Справочник.УПЖКХ_Помещения КАК УПЖКХ_Помещения
	               |ГДЕ
	               |	УПЖКХ_Помещения.Владелец = &Владелец
	               |	И УПЖКХ_Помещения.Код = &НомерПомещения
	               |	И УПЖКХ_Помещения.ВидПомещения.Наименование = &ВидПомещения
	               |	И УПЖКХ_Помещения.ПометкаУдаления = ЛОЖЬ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КВП_ПлощадьПомещенияСрезПоследних.Объект КАК Объект,
	               |	СУММА(ВЫБОР
	               |			КОГДА КВП_ПлощадьПомещенияСрезПоследних.ВидПлощади = ЗНАЧЕНИЕ(Справочник.УПЖКХ_ВидыПлощадей.ЖилаяПлощадь)
	               |				ТОГДА КВП_ПлощадьПомещенияСрезПоследних.Площадь
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ЖилаяПлощадь,
	               |	СУММА(ВЫБОР
	               |			КОГДА КВП_ПлощадьПомещенияСрезПоследних.ВидПлощади <> ЗНАЧЕНИЕ(Справочник.УПЖКХ_ВидыПлощадей.ЖилаяПлощадь)
	               |				ТОГДА КВП_ПлощадьПомещенияСрезПоследних.Площадь
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ОбщаяПлощадь
	               |ПОМЕСТИТЬ ВТ_Площади
	               |ИЗ
	               |	РегистрСведений.КВП_ПлощадьПомещения.СрезПоследних(
	               |			&ТекДата,
	               |			Объект В
	               |					(ВЫБРАТЬ
	               |						Т.Помещение
	               |					ИЗ
	               |						ВТ_РеквизитыПомещения КАК Т)
	               |				И ВидПлощади В (ЗНАЧЕНИЕ(Справочник.УПЖКХ_ВидыПлощадей.ЖилаяПлощадь), ЗНАЧЕНИЕ(Справочник.УПЖКХ_ВидыПлощадей.ОбщаяПлощадь))) КАК КВП_ПлощадьПомещенияСрезПоследних
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КВП_ПлощадьПомещенияСрезПоследних.Объект
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ЛицевойСчет.Адрес КАК Помещение,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец = &КонтрагентПустующийФонд
	               |				ТОГДА ""Не заселено""
	               |			ИНАЧЕ ""Заселено""
	               |		КОНЕЦ) КАК СтатусПомещения
	               |ПОМЕСТИТЬ ВТ_СтатусПомещения
	               |ИЗ
	               |	РегистрСведений.УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчета.СрезПоследних(
	               |			,
	               |			ЛицевойСчет.Адрес В
	               |				(ВЫБРАТЬ
	               |					Т.Помещение
	               |				ИЗ
	               |					ВТ_Помещения КАК Т)) КАК УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ЛицевойСчет.Адрес
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_РеквизитыПомещения.ВидПомещения КАК ВидПомещения,
	               |	ВТ_РеквизитыПомещения.НомерПомещения КАК НомерПомещения,
	               |	ВТ_РеквизитыПомещения.КоличествоКомнат КАК КоличествоКомнат,
	               |	ВТ_РеквизитыПомещения.Помещение КАК Помещение,
	               |	ВТ_РеквизитыПомещения.Подъезд КАК Подъезд,
	               |	ВТ_РеквизитыПомещения.Этаж КАК Этаж,
	               |	ЕСТЬNULL(ВТ_Площади.ЖилаяПлощадь, 0) КАК ЖилаяПлощадь,
	               |	ЕСТЬNULL(ВТ_Площади.ОбщаяПлощадь, 0) КАК ОбщаяПлощадь,
	               |	ЕСТЬNULL(ВТ_СтатусПомещения.СтатусПомещения, """") КАК СтатусПомещения,
	               |	ВТ_РеквизитыПомещения.ДатаРегистрацииВРосреестре КАК ДатаРегистрацииВРосреестре
	               |ИЗ
	               |	ВТ_РеквизитыПомещения КАК ВТ_РеквизитыПомещения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Площади КАК ВТ_Площади
	               |		ПО ВТ_РеквизитыПомещения.Помещение = ВТ_Площади.Объект
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтатусПомещения КАК ВТ_СтатусПомещения
	               |		ПО ВТ_РеквизитыПомещения.Помещение = ВТ_СтатусПомещения.Помещение"; 
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	Если Выборка.Следующий() Тогда 
		
		ЗаполнитьЗначенияСвойств(СтруктураРезультат,Выборка); 	 
		СтруктураРезультат.Вставить("УИДПомещения",Выборка.Помещение.УникальныйИдентификатор()); 	 
		
	КонецЕсли; 
	
	
	Возврат СтруктураРезультат; 
	
КонецФункции	


//Функция возврата данных из базы по помещению  
// для бизнес процесса ЗагрузкаТранспортногоФайла 
Функция ЗаполнитьРеквизитыПоПомещениюПоСсылкеНаСервере(ПомещениеСсылка) Экспорт
	
	
	СтруктураРезультат  = Новый Структура; 
	СтруктураРезультат.Вставить("ВидПомещения"); 
	СтруктураРезультат.Вставить("КоличествоКомнат"); 
	СтруктураРезультат.Вставить("ПлощадьЖилая"); 
	СтруктураРезультат.Вставить("ПлощадьОбщая"); 
	СтруктураРезультат.Вставить("Подъезд");   
	СтруктураРезультат.Вставить("СтатусПомещения"); 
	СтруктураРезультат.Вставить("УИДПомещения"); 
	СтруктураРезультат.Вставить("Этаж");  
	СтруктураРезультат.Вставить("НомерПомещения");  
	////10.10.2022 Старозубаев 
	СтруктураРезультат.Вставить("Суффикс");   
	СтруктураРезультат.Вставить("ДатаРегистрацииВРосреестре"); 
	
	// Статус Помещения переделать на контрагента ФГАУ незаселенный фонд , если то не заселено 
	
	Запрос = Новый Запрос; 
	
	Запрос.УстановитьПараметр("Помещение",ПомещениеСсылка); 
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата()); 
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	УПЖКХ_Помещения.ВидПомещения КАК ВидПомещения,
	               |	УПЖКХ_Помещения.Код КАК НомерПомещения,
	               |	УПЖКХ_Помещения.КоличествоКомнат КАК КоличествоКомнат,
	               |	УПЖКХ_Помещения.Ссылка КАК Помещение,
	               |	УПЖКХ_Помещения.Подъезд.НомерПодъезда КАК Подъезд,
	               |	УПЖКХ_Помещения.Этаж КАК Этаж,
	               |	УПЖКХ_Помещения.ИдентификаторКлиента КАК УидПомещения,
	               |	УПЖКХ_Помещения.Суффикс КАК Суффикс,
	               |	УПЖКХ_Помещения.ЕРЦ_ДатаРегистрацииВРосреестре КАК ДатаРегистрацииВРосреестре
	               |ПОМЕСТИТЬ ВТ_РеквизитыПомещения
	               |ИЗ
	               |	Справочник.УПЖКХ_Помещения КАК УПЖКХ_Помещения
	               |ГДЕ
	               |	УПЖКХ_Помещения.ПометкаУдаления = ЛОЖЬ
	               |	И УПЖКХ_Помещения.Ссылка = &Помещение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КВП_ПлощадьПомещенияСрезПоследних.Объект КАК Объект,
	               |	СУММА(ВЫБОР
	               |			КОГДА КВП_ПлощадьПомещенияСрезПоследних.ВидПлощади = ЗНАЧЕНИЕ(Справочник.УПЖКХ_ВидыПлощадей.ЖилаяПлощадь)
	               |				ТОГДА КВП_ПлощадьПомещенияСрезПоследних.Площадь
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ЖилаяПлощадь,
	               |	СУММА(ВЫБОР
	               |			КОГДА КВП_ПлощадьПомещенияСрезПоследних.ВидПлощади <> ЗНАЧЕНИЕ(Справочник.УПЖКХ_ВидыПлощадей.ЖилаяПлощадь)
	               |				ТОГДА КВП_ПлощадьПомещенияСрезПоследних.Площадь
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ОбщаяПлощадь
	               |ПОМЕСТИТЬ ВТ_Площади
	               |ИЗ
	               |	РегистрСведений.КВП_ПлощадьПомещения.СрезПоследних(
	               |			&ТекДата,
	               |			Объект В
	               |					(ВЫБРАТЬ
	               |						Т.Помещение
	               |					ИЗ
	               |						ВТ_РеквизитыПомещения КАК Т)
	               |				И ВидПлощади В (ЗНАЧЕНИЕ(Справочник.УПЖКХ_ВидыПлощадей.ЖилаяПлощадь), ЗНАЧЕНИЕ(Справочник.УПЖКХ_ВидыПлощадей.ОбщаяПлощадь))) КАК КВП_ПлощадьПомещенияСрезПоследних
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КВП_ПлощадьПомещенияСрезПоследних.Объект
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_РеквизитыПомещения.ВидПомещения КАК ВидПомещения,
	               |	ВТ_РеквизитыПомещения.НомерПомещения КАК НомерПомещения,
	               |	ВТ_РеквизитыПомещения.КоличествоКомнат КАК КоличествоКомнат,
	               |	ВТ_РеквизитыПомещения.Помещение КАК Помещение,
	               |	ВТ_РеквизитыПомещения.Подъезд КАК Подъезд,
	               |	ВТ_РеквизитыПомещения.Этаж КАК Этаж,
	               |	ЕСТЬNULL(ВТ_Площади.ЖилаяПлощадь, 0) КАК ПлощадьЖилая,
	               |	ЕСТЬNULL(ВТ_Площади.ОбщаяПлощадь, 0) КАК ПлощадьОбщая,
	               |	ВТ_РеквизитыПомещения.УидПомещения КАК УидПомещения,
	               |	ВТ_РеквизитыПомещения.Суффикс КАК Суффикс,
	               |	ВТ_РеквизитыПомещения.ДатаРегистрацииВРосреестре КАК ДатаРегистрацииВРосреестре
	               |ИЗ
	               |	ВТ_РеквизитыПомещения КАК ВТ_РеквизитыПомещения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Площади КАК ВТ_Площади
	               |		ПО ВТ_РеквизитыПомещения.Помещение = ВТ_Площади.Объект"; 
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	Если Выборка.Следующий() Тогда 
		
		ЗаполнитьЗначенияСвойств(СтруктураРезультат,Выборка); 	 
		//СтруктураРезультат.Вставить("УИДПомещения",Выборка.Помещение.УникальныйИдентификатор()); 	 
		
	КонецЕсли; 
	
	
	Возврат СтруктураРезультат; 
	
КонецФункции	


Функция ЗаполнитьРеквизитыПоЖильцуНаСервере(Жилец) Экспорт
	
	СтруктураРезультат  = Новый Структура; 
	СтруктураРезультат.Вставить("ЛицевойСчетСсылка"); 
	СтруктураРезультат.Вставить("Фамилия"); 
	СтруктураРезультат.Вставить("Имя"); 
	СтруктураРезультат.Вставить("Отчество"); 
	СтруктураРезультат.Вставить("НомерПаспорта");   
	СтруктураРезультат.Вставить("Серия");
	СтруктураРезультат.Вставить("ДатаВыдачи");
	СтруктураРезультат.Вставить("ДатаРождения");
	СтруктураРезультат.Вставить("Почта"); 
	СтруктураРезультат.Вставить("Телефон");  
	СтруктураРезультат.Вставить("УИДПроживающего"); 
	// Старозубаев Откуда брать телефон и почту , есть вариант из Жильца или Из Физлица 
	// Так же с записью вопрос куда записывать 
	
	Запрос = Новый Запрос; 
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	УПЖКХ_Жильцы.Владелец КАК ЛицевойСчет,
	               |	УПЖКХ_Жильцы.Ссылка КАК Жилец,
	               |	УПЖКХ_Жильцы.ФизЛицо.Фамилия КАК Фамилия,
	               |	УПЖКХ_Жильцы.ФизЛицо.Имя КАК Имя,
	               |	УПЖКХ_Жильцы.ФизЛицо.Отчество КАК Отчество,
	               |	УПЖКХ_Жильцы.ФизЛицо КАК ФизЛицо,
	               |	УПЖКХ_Жильцы.ИдентификаторКлиента КАК УИДПроживающего
	               |ПОМЕСТИТЬ ВТ_Жильцы
	               |ИЗ
	               |	Справочник.УПЖКХ_Жильцы КАК УПЖКХ_Жильцы
	               |ГДЕ
	               |	УПЖКХ_Жильцы.Ссылка = &Жилец
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УПЖКХ_ЖильцыКонтактнаяИнформация.Ссылка КАК Ссылка,
	               |	УПЖКХ_ЖильцыКонтактнаяИнформация.Представление КАК Представление,
	               |	УПЖКХ_ЖильцыКонтактнаяИнформация.НомерТелефона КАК НомерТелефона
	               |ПОМЕСТИТЬ ВТ_Телефон
	               |ИЗ
	               |	Справочник.УПЖКХ_Жильцы.КонтактнаяИнформация КАК УПЖКХ_ЖильцыКонтактнаяИнформация
	               |ГДЕ
	               |	УПЖКХ_ЖильцыКонтактнаяИнформация.Тип = &ТипКИТелефон
	               |	И УПЖКХ_ЖильцыКонтактнаяИнформация.Вид = &ВидКиТелефон
	               |	И УПЖКХ_ЖильцыКонтактнаяИнформация.Ссылка = &Жилец
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УПЖКХ_ЖильцыКонтактнаяИнформация.Ссылка КАК Ссылка,
	               |	УПЖКХ_ЖильцыКонтактнаяИнформация.Представление КАК Представление,
	               |	УПЖКХ_ЖильцыКонтактнаяИнформация.АдресЭП КАК АдресЭП
	               |ПОМЕСТИТЬ ВТ_Почта
	               |ИЗ
	               |	Справочник.УПЖКХ_Жильцы.КонтактнаяИнформация КАК УПЖКХ_ЖильцыКонтактнаяИнформация
	               |ГДЕ
	               |	УПЖКХ_ЖильцыКонтактнаяИнформация.Тип = &ТипКИПочта
	               |	И УПЖКХ_ЖильцыКонтактнаяИнформация.Вид = &ВидКиПочта
	               |	И УПЖКХ_ЖильцыКонтактнаяИнформация.Ссылка = &Жилец
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Жильцы.ЛицевойСчет КАК ЛицевойСчетСсылка,
	               |	ВТ_Жильцы.Жилец КАК Жилец,
	               |	ВТ_Жильцы.Фамилия КАК Фамилия,
	               |	ВТ_Жильцы.Имя КАК Имя,
	               |	ВТ_Жильцы.Отчество КАК Отчество,
	               |	ВТ_Жильцы.ФизЛицо КАК ФизЛицо,
	               |	ЕСТЬNULL(ДокументыФизическихЛицСрезПоследних.Серия, """") КАК Серия,
	               |	ЕСТЬNULL(ДокументыФизическихЛицСрезПоследних.Номер, """") КАК НомерПаспорта,
	               |	ВТ_Жильцы.УИДПроживающего КАК УИДПроживающего,
	               |	ЕСТЬNULL(ДокументыФизическихЛицСрезПоследних.ДатаВыдачи, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВыдачи,
	               |	ВТ_Жильцы.ФизЛицо.ДатаРождения КАК ДатаРождения,
	               |	ЕСТЬNULL(ВТ_Почта.АдресЭП, """") КАК Почта,
	               |	ЕСТЬNULL(ВТ_Телефон.НомерТелефона, """") КАК Телефон
	               |ИЗ
	               |	ВТ_Жильцы КАК ВТ_Жильцы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
	               |				,
	               |				Физлицо В
	               |						(ВЫБРАТЬ
	               |							Т.ФизЛицо
	               |						ИЗ
	               |							ВТ_Жильцы КАК Т)
	               |					И ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПаспортРФ)) КАК ДокументыФизическихЛицСрезПоследних
	               |		ПО ВТ_Жильцы.ФизЛицо = ДокументыФизическихЛицСрезПоследних.Физлицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Телефон КАК ВТ_Телефон
	               |		ПО ВТ_Жильцы.Жилец = ВТ_Телефон.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Почта КАК ВТ_Почта
	               |		ПО ВТ_Жильцы.Жилец = ВТ_Почта.Ссылка";  
	
	Запрос.УстановитьПараметр("Жилец",Жилец);
	//++31.01.2023 Старозубаев  
	// Доработал запрос добавил две ВТ_Почта и ВТ_Телефон
	ЗАпрос.УстановитьПараметр("ТипКИТелефон",Перечисления.ТипыКонтактнойИнформации.Телефон); 
	ЗАпрос.УстановитьПараметр("ТипКИПочта", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты); 
	Запрос.УстановитьПараметр("ВидКиТелефон",Справочники.ВидыКонтактнойИнформации.ТелефонДомашнийФизическиеЛица); 
	Запрос.УстановитьПараметр("ВидКиПОчта", Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица); 
	
	
	
	
	
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	Если Выборка.Следующий() Тогда 
		
		ЗаполнитьЗначенияСвойств(СтруктураРезультат,Выборка); 	 	 
		
	КонецЕсли; 
	
	
	Возврат СтруктураРезультат; 
	
	


КонецФункции 


Функция ЗаполнитьРеквизитыПоЛицевомуСчетуНаСервере(ЛицевойСчет) Экспорт
	
	СтруктураРезультат  = Новый Структура; 
	СтруктураРезультат.Вставить("ВидОснования");  
	СтруктураРезультат.Вставить("ДатаОткрытияЛС"); 
	СтруктураРезультат.Вставить("ДатаЗакрытияЛС"); 
	СтруктураРезультат.Вставить("КоличествоПроживающих"); 
	СтруктураРезультат.Вставить("НомерОснования");   
	СтруктураРезультат.Вставить("УИДПомещения");  // Реквизит из Помещения  Идентификатор Клиента 
	СтруктураРезультат.Вставить("КодЛицевогоСчетаУАгента");  // Либо код Лицевого счета , либо идентификатор  
	СтруктураРезультат.Вставить("ДоляЧислитель");
	СтруктураРезультат.Вставить("ДоляЗнаменатель");
	СтруктураРезультат.Вставить("ДатаДокументаОснованияЛС");

	
	Запрос = Новый ЗАпрос; 
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	КВП_ЛицевыеСчета.Ссылка КАК ЛицевойСчетСсылка,
	               |	КВП_ЛицевыеСчетаСрезПоследних.Период КАК ДатаОткрытияЛС,
	               |	КВП_ЛицевыеСчетаСрезПоследнихНеДействует.Период КАК ДатаЗакрытияЛС,
	               |	КВП_УчетКоличестваЖильцовПоЛицевымСчетамСрезПоследних.КоличествоПроживающих КАК КоличествоПроживающих,
	               |	""ВидОснования"" КАК ВидОснования,
	               |	КВП_ЛицевыеСчета.Код КАК КодЛицевогоСчетаУАгента,
	               |	КВП_ЛицевыеСчета.Адрес.ИдентификаторКлиента КАК УидПомещения,
	               |	КВП_РазмерыДолейЛицевыхСчетовСрезПоследних.ДоляЧислитель КАК ДоляЧислитель,
	               |	КВП_РазмерыДолейЛицевыхСчетовСрезПоследних.ДоляЗнаменатель КАК ДоляЗнаменатель,
	               |	КВП_ЛицевыеСчета.ДокументОснованиеЛС КАК НомерОснования,
	               |	КВП_ЛицевыеСчета.ЕРЦ_ДатаВыдачиДоговораНаймаИ_Др_Документа КАК ДатаДокументаОснованияЛС
	               |ИЗ
	               |	Справочник.КВП_ЛицевыеСчета КАК КВП_ЛицевыеСчета
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КВП_ЛицевыеСчета.СрезПоследних(
	               |				,
	               |				ЛицевойСчет = &ЛицевойСчет
	               |					И Действует) КАК КВП_ЛицевыеСчетаСрезПоследних
	               |		ПО КВП_ЛицевыеСчета.Ссылка = КВП_ЛицевыеСчетаСрезПоследних.ЛицевойСчет
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КВП_ЛицевыеСчета.СрезПоследних(
	               |				,
	               |				ЛицевойСчет = &ЛицевойСчет
	               |					И НЕ Действует) КАК КВП_ЛицевыеСчетаСрезПоследнихНеДействует
	               |		ПО (КВП_ЛицевыеСчета.Ссылка = КВП_ЛицевыеСчетаСрезПоследних.ЛицевойСчет)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КВП_УчетКоличестваЖильцовПоЛицевымСчетам.СрезПоследних(, ЛицевойСчет = &ЛицевойСчет) КАК КВП_УчетКоличестваЖильцовПоЛицевымСчетамСрезПоследних
	               |		ПО КВП_ЛицевыеСчета.Ссылка = КВП_УчетКоличестваЖильцовПоЛицевымСчетамСрезПоследних.ЛицевойСчет
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КВП_РазмерыДолейЛицевыхСчетов.СрезПоследних(, ЛицевойСчет = &ЛицевойСчет) КАК КВП_РазмерыДолейЛицевыхСчетовСрезПоследних
	               |		ПО КВП_ЛицевыеСчета.Ссылка = КВП_РазмерыДолейЛицевыхСчетовСрезПоследних.ЛицевойСчет.Ссылка
	               |ГДЕ
	               |	КВП_ЛицевыеСчета.Ссылка = &ЛицевойСчет"; 
	
	Запрос.УстановитьПараметр("ЛицевойСчет",ЛицевойСчет); 
	
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	
	Если Выборка.Следующий() Тогда 
		
		ЗаполнитьЗначенияСвойств(СтруктураРезультат,Выборка); 	 
		
	КонецЕсли; 
	
	Возврат СтруктураРезультат; 	
	
КонецФункции

Процедура СверкаDBFИНачислений(Параметры, АдресРезультата) Экспорт  
	КЧ = Новый КвалификаторыЧисла(15,2);
	КС = Новый КвалификаторыСтроки(100);  
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	Массив.Очистить();
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("НомерЛС", ОписаниеТиповС);
	ТЗ.Колонки.Добавить("Начислено", ОписаниеТиповЧ);
	
	Для Каждого Стр Из Параметры.МассивДанных Цикл
		НовСтр = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗ.НомерЛС КАК НомерЛС,
	               |	ТЗ.Начислено КАК Начислено
	               |ПОМЕСТИТЬ ДанныеТЗ
	               |ИЗ
	               |	&ТЗ КАК ТЗ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КВП_ЗданияДополнительныеРеквизиты.Значение КАК ТерриториальныйОтдел,
	               |	КВП_ЗданияДополнительныеРеквизиты.Ссылка КАК Здание
	               |ПОМЕСТИТЬ ВТ_ТерОтдел
	               |ИЗ
	               |	Справочник.КВП_Здания.ДополнительныеРеквизиты КАК КВП_ЗданияДополнительныеРеквизиты
	               |ГДЕ
	               |	КВП_ЗданияДополнительныеРеквизиты.Свойство.ИдентификаторДляФормул = ""ТерриториальныйОтдел""
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КВП_ЛицевыеСчета.Ссылка КАК Ссылка,
	               |	ДанныеТЗ.Начислено КАК Начислено,
	               |	КВП_ЛицевыеСчета.Адрес.Владелец КАК Здание,
	               |	ВЫБОР
	               |		КОГДА КВП_ЛицевыеСчета.Адрес.Владелец.ВидСооружения.Общежитие
	               |			ТОГДА ""Общежитие""
	               |		ИНАЧЕ ""МКД""
	               |	КОНЕЦ КАК ТипЗдания,
	               |	КВП_ЛицевыеСчета.Адрес.Владелец.ЕРЦ_ФедеральныйОкруг КАК ФедеральныйОкруг,
	               |	КВП_ЛицевыеСчета.Адрес.Владелец.ЕРЦ_Регион КАК Регион,
	               |	ЕСТЬNULL(ВТ_ТерОтдел.ТерриториальныйОтдел, НЕОПРЕДЕЛЕНО) КАК ТерриториальныйОтдел
	               |ПОМЕСТИТЬ ВТ_ЛицСчета
	               |ИЗ
	               |	Справочник.КВП_ЛицевыеСчета КАК КВП_ЛицевыеСчета
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеТЗ КАК ДанныеТЗ
	               |		ПО КВП_ЛицевыеСчета.Идентификатор = ДанныеТЗ.НомерЛС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТерОтдел КАК ВТ_ТерОтдел
	               |		ПО КВП_ЛицевыеСчета.Адрес.Владелец = ВТ_ТерОтдел.Здание
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЕСТЬNULL(ВТ_ТерОтдел.ТерриториальныйОтдел, НЕОПРЕДЕЛЕНО),
	               |	ДанныеТЗ.Начислено,
	               |	КВП_ЛицевыеСчета.Ссылка,
	               |	КВП_ЛицевыеСчета.Адрес.Владелец,
	               |	КВП_ЛицевыеСчета.Адрес.Владелец.ЕРЦ_ФедеральныйОкруг,
	               |	КВП_ЛицевыеСчета.Адрес.Владелец.ЕРЦ_Регион,
	               |	ВЫБОР
	               |		КОГДА КВП_ЛицевыеСчета.Адрес.Владелец.ВидСооружения.Общежитие
	               |			ТОГДА ""Общежитие""
	               |		ИНАЧЕ ""МКД""
	               |	КОНЕЦ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ВТ_ЛицСчета.Начислено) КАК НачисленоФайл,
	               |	ВТ_ЛицСчета.Здание КАК Здание,
	               |	ВТ_ЛицСчета.ТипЗдания КАК ТипЗдания,
	               |	ВТ_ЛицСчета.ФедеральныйОкруг КАК ФедеральныйОкруг,
	               |	ВТ_ЛицСчета.Регион КАК Регион,
	               |	ВТ_ЛицСчета.ТерриториальныйОтдел КАК ТерриториальныйОтдел,
	               |	СУММА(дбф_Абоненты.ITOGO) КАК НачисленоБД,
	               |	ВТ_ЛицСчета.Ссылка КАК ЛицевойСчет
	               |ИЗ
	               |	ВТ_ЛицСчета КАК ВТ_ЛицСчета
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.дбф_Абоненты КАК дбф_Абоненты
	               |		ПО (дбф_Абоненты.ЛицевойСчет = ВТ_ЛицСчета.Ссылка)
	               |ГДЕ
	               |	дбф_Абоненты.ЛицевойСчет В
	               |			(ВЫБРАТЬ
	               |				ЛицСчета.Ссылка КАК Ссылка
	               |			ИЗ
	               |				ВТ_ЛицСчета КАК ЛицСчета)
	               |	И дбф_Абоненты.Период МЕЖДУ &ДатаНачала И &ДатаКонца
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ЛицСчета.Здание,
	               |	ВТ_ЛицСчета.ТипЗдания,
	               |	ВТ_ЛицСчета.ФедеральныйОкруг,
	               |	ВТ_ЛицСчета.Регион,
	               |	ВТ_ЛицСчета.ТерриториальныйОтдел,
	               |	ВТ_ЛицСчета.Ссылка"; 
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Параметры.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКонца", КонецДня(Параметры.ДатаКонца));
	Запрос.УстановитьПараметр("ТЗ", ТЗ);  
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	МассивВозврат = Новый Массив;
	Пока Выборка.Следующий() Цикл
		МассивВозврат.Добавить(Новый Структура("ФедеральныйОкруг, Регион, ТипЗдания, Здание, ЛицевойСчет, НачисленоФайл, НачисленоБД", 
												Выборка.ФедеральныйОкруг, Выборка.Регион, Выборка.ТипЗдания, Выборка.Здание, Выборка.ЛицевойСчет, Выборка.НачисленоФайл, Выборка.НачисленоБД));
	КонецЦикла;
	ПоместитьВоВременноеХранилище(МассивВозврат, АдресРезультата);
КонецПроцедуры	

#Область НаборУслуг

Функция ПолучитьНаборУслуг(Здание, Период, ЕРЦ_ВидЛицевогоСчета) Экспорт 
		НаборУслуг = Неопределено;
     
	УстановитьПривилегированныйРежим(Истина);  //#14419 Старозубаев
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕРЦ_НаборыУслугСрезПоследних.НаборУслуг КАК НаборУслуг
	|ИЗ
	|	РегистрСведений.ЕРЦ_НаборыУслуг.СрезПоследних(
	|			&Период,
	|			Здание = &Здание
	|				И ЕРЦ_ВидЛицевогоСчета = &ЕРЦ_ВидЛицевогоСчета) КАК ЕРЦ_НаборыУслугСрезПоследних";
	
	Запрос.УстановитьПараметр("Здание", Здание);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ЕРЦ_ВидЛицевогоСчета", ЕРЦ_ВидЛицевогоСчета);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		НаборУслуг = Выборка.НаборУслуг;
	КонецЕсли; 

	Возврат НаборУслуг;
	
КонецФункции // ЕРЦ_ПолучитьНаборУслуг()

Функция ПолучитьУслугиИзНабораУслуг(ЕРЦ_НаборУслуг) Экспорт 

	УстановитьПривилегированныйРежим(Истина); //#14419 Старозубаев  
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕРЦ_НаборыУслугУслуги.Услуга КАК Услуга
		|ИЗ
		|	Справочник.ЕРЦ_НаборыУслуг.Услуги КАК ЕРЦ_НаборыУслугУслуги
		|ГДЕ
		|	ЕРЦ_НаборыУслугУслуги.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ЕРЦ_НаборУслуг);

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Услуга"); 
	
КонецФункции // ЕРЦ_ПолучитьУслугиИзНабораУслуг()

Функция ПолучитьРезультатИзНабораУслугСУчетомОбъектов(Период, ЕРЦ_НаборУслуг, Помещение, Здание) Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЕРЦ_НаборУслуг", ЕРЦ_НаборУслуг);
	Запрос.УстановитьПараметр("Помещение", Помещение);
	Запрос.УстановитьПараметр("Здание", Здание);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕРЦ_НаборыУслугУслуги.Услуга КАК Услуга,
	|	ЕРЦ_НаборыУслугУслуги.Поведение КАК Поведение
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	Справочник.ЕРЦ_НаборыУслуг.Услуги КАК ЕРЦ_НаборыУслугУслуги
	|ГДЕ
	|	ЕРЦ_НаборыУслугУслуги.Ссылка = &ЕРЦ_НаборУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСрезПоследних.Счетчик КАК Счетчик,
	|	ТабСрезПоследних.Счетчик.ВидУслуги КАК Услуга
	|ИЗ
	|	РегистрСведений.КВП_ЗакрепленныеСчетчики КАК ТабСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(Таб.Период) КАК Период,
	|			Таб.Объект КАК Объект,
	|			Таб.Счетчик КАК Счетчик
	|		ИЗ
	|			РегистрСведений.КВП_ЗакрепленныеСчетчики КАК Таб
	|		ГДЕ
	|			Таб.Период <= &Период
	|			И Таб.Объект = &Помещение
	|			И НЕ Таб.Счетчик.ПризнакВыходногоСчетчика
	|			И Таб.ДатаИзменения <= &Период
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Таб.Счетчик,
	|			Таб.Объект) КАК ВложенныйЗапрос
	|		ПО ТабСрезПоследних.Период = ВложенныйЗапрос.Период
	|			И ТабСрезПоследних.Объект = ВложенныйЗапрос.Объект
	|			И ТабСрезПоследних.Счетчик = ВложенныйЗапрос.Счетчик
	|ГДЕ
	|	ТабСрезПоследних.Действует
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСрезПоследних.Счетчик КАК Счетчик,
	|	ТабСрезПоследних.Счетчик.ВидУслуги КАК Услуга
	|ИЗ
	|	РегистрСведений.КВП_ЗакрепленныеСчетчики КАК ТабСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(Таб.Период) КАК Период,
	|			Таб.Объект КАК Объект,
	|			Таб.Счетчик КАК Счетчик
	|		ИЗ
	|			РегистрСведений.КВП_ЗакрепленныеСчетчики КАК Таб
	|		ГДЕ
	|			Таб.Период <= &Период
	|			И Таб.Объект = &Здание
	|			И НЕ Таб.Счетчик.ПризнакВыходногоСчетчика
	|			И Таб.ДатаИзменения <= &Период
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Таб.Счетчик,
	|			Таб.Объект) КАК ВложенныйЗапрос
	|		ПО ТабСрезПоследних.Период = ВложенныйЗапрос.Период
	|			И ТабСрезПоследних.Объект = ВложенныйЗапрос.Объект
	|			И ТабСрезПоследних.Счетчик = ВложенныйЗапрос.Счетчик
	|ГДЕ
	|	ТабСрезПоследних.Действует";

	
	Пакет = Запрос.ВыполнитьПакетСПромежуточнымиДанными(); 
	УслугиНабора 						= Пакет[0].Выгрузить();
	СчетчикиПомещения 					= Пакет[1].Выгрузить();
	СчетчикиЗдания 						= Пакет[2].Выгрузить();
	
	Услуги = Новый Массив;
	Отказ = Ложь;
	УслугиПоПомещениюЗапрошены = Ложь;
	УслугиПоПомещениюНайдены = Ложь;
	УслугиПоЗданиюЗапрошены = Ложь;
	УслугиПоЗданиюНайдены = Ложь;
	
	Для каждого Стр Из УслугиНабора Цикл
		Если Стр.Поведение = Перечисления.ЕРЦ_ПоведениеУслуги.ПоСчетчикуПомещения Тогда 
			УслугиПоПомещениюЗапрошены = Истина;
			Если УслугиПоПомещениюНайдены или СчетчикиПомещения.НайтиСтроки(Новый Структура("Услуга", Стр.Услуга)).Количество() = 0 Тогда
				Продолжить;
			Иначе 
				УслугиПоПомещениюНайдены = Истина;
			КонецЕсли; 
		ИначеЕсли Стр.Поведение = Перечисления.ЕРЦ_ПоведениеУслуги.ПоСчетчикуЗдания Тогда
			УслугиПоЗданиюЗапрошены = Истина;
			Если УслугиПоЗданиюНайдены или СчетчикиЗдания.НайтиСтроки(Новый Структура("Услуга", Стр.Услуга)).Количество() = 0 Тогда
				Продолжить;
			Иначе 
				УслугиПоЗданиюНайдены = Истина;
			КонецЕсли; 
		КонецЕсли; 
		Услуги.Добавить(Стр.Услуга);
	КонецЦикла; 
	
	Если УслугиПоПомещениюЗапрошены и Не УслугиПоПомещениюНайдены Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
		"Не найдена услуга соответствующая набору %1 и помещению %2 в здании %3 по установленным счетчикам помещения",
		ЕРЦ_НаборУслуг, Помещение, Здание),,,,Отказ);
	КонецЕсли; 
	
	Если УслугиПоЗданиюЗапрошены и Не УслугиПоЗданиюНайдены Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
		"Не найдена услуга соответствующая набору %1 и зданию %2 по установленным счетчикам здания",
		ЕРЦ_НаборУслуг, Здание),,,,Отказ);
	КонецЕсли; 
	
	Возврат Новый Структура("Отказ,Услуги", Отказ, Услуги)
	
КонецФункции // ПолучитьРезультатИзНабораУслугСУчетомОбъектов()

Функция ПолучитьДействующийЛСПоВидуИЗданию(Здание, Период, ЕРЦ_ВидЛицевогоСчета) Экспорт 
	
	ЛицевойСчет = Справочники.КВП_ЛицевыеСчета.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РегистрСведенийКВП_ЛицевыеСчета.ЛицевойСчет КАК ЛицевойСчет
		|ИЗ
		|	РегистрСведений.КВП_ЛицевыеСчета КАК РегистрСведенийКВП_ЛицевыеСчета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УПЖКХ_Помещения КАК УПЖКХ_Помещения
		|		ПО РегистрСведенийКВП_ЛицевыеСчета.Объект = УПЖКХ_Помещения.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КВП_ЛицевыеСчета КАК КВП_ЛицевыеСчета
		|		ПО РегистрСведенийКВП_ЛицевыеСчета.ЛицевойСчет = КВП_ЛицевыеСчета.Ссылка
		|ГДЕ
		|	РегистрСведенийКВП_ЛицевыеСчета.Период <= &Период
		|	И УПЖКХ_Помещения.Владелец = &Здание
		|	И КВП_ЛицевыеСчета.ЕРЦ_ВидЛицевогоСчета = &ЕРЦ_ВидЛицевогоСчета
		|
		|СГРУППИРОВАТЬ ПО
		|	РегистрСведенийКВП_ЛицевыеСчета.ЛицевойСчет
		|
		|ИМЕЮЩИЕ
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РегистрСведенийКВП_ЛицевыеСчета.Регистратор ССЫЛКА Документ.КВП_ЗакрытиеЛицевогоСчета
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) = ЛОЖЬ";		
	Запрос.УстановитьПараметр("Здание", Здание);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ЕРЦ_ВидЛицевогоСчета", ЕРЦ_ВидЛицевогоСчета);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		ЛицевойСчет = Выборка.ЛицевойСчет;
	КонецЕсли; 

	Возврат ЛицевойСчет;
		
КонецФункции // ПолучитьДействующийЛСПоВидуИЗданию()

#КонецОбласти  
